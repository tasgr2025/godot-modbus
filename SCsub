#!/usr/bin/env python

Import("env")
Import("env_modules")

env_modbus = env_modules.Clone()

print("Сборка модуля \"modbus\" для \"%s\"." % env["platform"])
Execute(Copy("libmodbus/config.h", "config.h.%s/config.h" % env["platform"]))
env_modbus.Prepend(CPPPATH=["libmodbus", "libmodbus/src"])
env_modbus = env_modbus.Clone()
env_modbus.disable_warnings()
modbus_obj = []
modbus_sources = [
    "src/gdmodbus.cpp",
    "libmodbus/src/modbus-data.c",
    "libmodbus/src/modbus-rtu.c",
    "libmodbus/src/modbus-tcp.c",
    "libmodbus/src/modbus.c"]
env_modbus.add_source_files(modbus_obj, modbus_sources)
env.modules_sources += modbus_obj

# Godot source files
module_obj = []

env_modbus.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the libmodbus is updated.
env.Depends(module_obj, modbus_obj)
